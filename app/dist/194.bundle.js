"use strict";(self.webpackChunkstellar_odyssey=self.webpackChunkstellar_odyssey||[]).push([[194],{194:function(D,B,A){A.r(B);var w=A(465),P=A(544),l=A(667),M=A.n(l),n=A(96),x=A(108);const{app:_}=n.default.PIXI;n.default.player={sprite:function(){const f=new w.Graphics;return f.lineStyle(2,16777215),f.drawCircle(0,0,50),f.x=_.screen.width/2,f.y=_.screen.height/2,f.filters=[new P.Vw({quality:.1})],new x.E(f,"Circle")}(),acceleration:.2,velocity:{x:0,y:0},restoringForce:.005,friction:.95,position:{x:0,y:0,_x:0,_y:0},state:["idle"]};const v=()=>!n.default.settings.clickToMove&&n.default.player.state[0]==="idle";n.default.keys.addKeys([{name:"Move Up",key:"w",fn:()=>n.default.player.velocity.y-=v()?n.default.player.acceleration:0},{name:"Move Left",key:"a",fn:()=>n.default.player.velocity.x-=v()?n.default.player.acceleration:0},{name:"Move Down",key:"s",fn:()=>n.default.player.velocity.y+=v()?n.default.player.acceleration:0},{name:"Move Right",key:"d",fn:()=>n.default.player.velocity.x+=v()?n.default.player.acceleration:0}]),n.default.functions.updateCamera=function(f){n.default.camera.x=l.E.smoothDamp((0,l.E)(n.default.camera.x),(0,l.E)(n.default.player.position.x),(0,l.E)(n.default.camera.smoothDamp),(0,l.E)(f)).toNumber(),n.default.camera.y=l.E.smoothDamp((0,l.E)(n.default.camera.y),(0,l.E)(n.default.player.position.y),(0,l.E)(n.default.camera.smoothDamp),(0,l.E)(f)).toNumber()},_.ticker.add(f=>{switch(n.default.player.position.x+=n.default.player.velocity.x,n.default.player.position.y+=n.default.player.velocity.y,n.default.player.sprite.x+=n.default.player.velocity.x,n.default.player.sprite.y+=n.default.player.velocity.y,n.default.player.velocity.x*=n.default.player.friction,n.default.player.velocity.y*=n.default.player.friction,n.default.player.state[0]){case"lockedToMass":const t=n.default.player.state[1];n.default.player.position.x=n.default.player.sprite.x=l.E.smoothDamp((0,l.E)(n.default.player.sprite.x),(0,l.E)(t.x),(0,l.E)(.15),(0,l.E)(f)).toNumber(),n.default.player.position.y=n.default.player.sprite.y=l.E.smoothDamp((0,l.E)(n.default.player.sprite.y),(0,l.E)(t.y),(0,l.E)(.15),(0,l.E)(f)).toNumber(),n.default.camera.x=n.default.player.sprite.x-_.screen.width/2,n.default.camera.y=n.default.player.sprite.y-_.screen.height/2;break;case"lockedToMassExit":n.default.player.position.x-=_.screen.width/2,n.default.player.position.y-=_.screen.height/2,n.default.functions.updateCamera(f),n.default.player.state=["idle"];break;case"idle":default:n.default.functions.updateCamera(f);break}})},108:function(D,B,A){A.d(B,{E:function(){return M}});var P=function(){class n{constructor(t){this.article=t}update(){}AABBs(t){const s=this.AABB;return!(t[2]<s[0]||s[2]<t[0]||t[3]<s[1]||s[3]<t[1])}collidesPoint(t){const s=this.vertices,e=s.length;let r=!1;for(let i=0,c=e-2;i<e;i+=2)s[i+1]>t.y!=s[c+1]>t.y&&t.x<(s[c]-s[i])*(t.y-s[i+1])/(s[c+1]-s[i+1])+s[i]&&(r=!r),c=i;return r}collidesCircle(){}collidesRectangle(){}collidesPolygon(t,s){const e=this.vertices,r=s?t:t.vertices,i=[e,r];let c,a,o,h,d;for(let E=0;E<i.length;E++){const u=i[E];for(let p=0;p<u.length;p+=2){const g=(p+2)%u.length,m={x:u[g+1]-u[p+1],y:u[p]-u[g]};c=a=null;for(let y=0;y<e.length;y+=2)o=m.x*e[y]+m.y*e[y+1],(c===null||o<c)&&(c=o),(a===null||o>a)&&(a=o);h=d=null;for(let y=0;y<r.length;y+=2)o=m.x*r[y]+m.y*r[y+1],(h===null||o<h)&&(h=o),(d===null||o>d)&&(d=o);if(a<h||d<c)return!1}}return!0}collidesLine(t,s){const e=this.vertices,r=e.length;if(this.collidesPoint(t))return!0;for(let i=0;i<r;i+=2){const c=(i+2)%r;if(n.lineLine(t,s,{x:e[i],y:e[i+1]},{x:e[c],y:e[c+1]}))return!0}return!1}collides(t){return this["collides"+t.SHAPE](t)}static lineLine(t,s,e,r){const i=t.x,c=t.y,a=s.x,o=s.y,h=e.x,d=e.y,E=r.x,u=r.y,p=a-i,g=o-c,m=E-h,y=u-d,R=(-g*(i-h)+p*(c-d))/(-m*g+p*y),C=(m*(c-d)-y*(i-h))/(-m*g+p*y);return R>=0&&R<=1&&C>=0&&C<=1}}class x extends n{constructor(t,s){super(t),this.SHAPE="Rectangle",s=s||{},this._vertices=[],this.AABB=[0,0,0,0],this.set(s)}set(t){this.center=t.center||this.article,this.rotation=t.rotation?t.rotation:t.center?t.center:this.article,typeof t.square!="undefined"?this._width=this._height=t.square:(this._width=t.width||this.article.width,this._height=t.height||this.article.height),this.noRotate=t.noRotate,this.hw=this._width/2,this.hh=this._height/2,this.update()}get width(){return this._width}set width(t){this._width=t,this.hw=t/2}get height(){return this._height}set height(t){this._height=t,this.hh=t/2}update(){const t=this.AABB,s=this.center;if(this.noRotate){const e=this.hw,r=this.hh;t[0]=s.x-e,t[1]=s.y-r,t[2]=s.x+e,t[3]=s.y+r}else{const e=Math.abs(Math.sin(this.rotation.rotation)/2),r=Math.abs(Math.cos(this.rotation.rotation)/2),i=this._width,c=this._height,a=c*e+i*r,o=c*r+i*e;t[0]=s.x-a,t[1]=s.y-o,t[2]=s.x+a,t[3]=s.y+o}this.verticesDirty=!0}updateVertices(){const t=this._vertices,s=this.center,e=this.hw,r=this.hh;if(this.noRotate){const i=this.AABB;t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[1],t[4]=i[2],t[5]=i[3],t[6]=i[0],t[7]=i[3]}else{const i=this.rotation.rotation,c=Math.sin(i),a=Math.cos(i);t[0]=s.x-e*a+r*c,t[1]=s.y-e*c-r*a,t[2]=s.x+e*a+r*c,t[3]=s.y+e*c-r*a,t[4]=s.x+e*a-r*c,t[5]=s.y+e*c+r*a,t[6]=s.x-e*a-r*c,t[7]=s.y-e*c+r*a}this.verticesDirty=!1}get vertices(){return this.verticesDirty&&this.updateVertices(),this._vertices}collidesRectangle(t){return this.noRotate&&t.noRotate?this.AABBs(t.AABB):this.collidesPolygon(t)}collidesCircle(t){return t.collidesRectangle(this)}static fromRectangle(t,s,e,r){const i={x:t+e/2,y:s+r/2};return new x(i,{width:e,height:r,noRotate:!0})}}class _ extends n{constructor(t,s,e){super(t),this.SHAPE="Polygon",e=e||{},this.points=s,this.vertices=[],this.AABB=[],this.set(e)}set(t){t.point&&(this.points=t.points),this.center=t.center||this.article,this.rotation=t.rotation?t.rotation:t.center?t.center:this.article,this.update()}update(){const t=this.rotation.rotation,s=Math.sin(t),e=Math.cos(t);let r=1/0,i=0,c=1/0,a=0;const o=this.points,h=o.length,d=this.vertices,E=this.center;for(let u=0;u<h;u+=2){const p=o[u],g=o[u+1],m=d[u]=E.x+p*e-g*s,y=d[u+1]=E.y+p*s+g*e;r=m<r?m:r,i=m>i?m:i,c=y<c?y:c,a=y>a?y:a}this.AABB[0]=r,this.AABB[1]=c,this.AABB[2]=i,this.AABB[3]=a,this.width=i-r,this.height=a-c,this.hw=(i-r)/2,this.hh=(a-c)/2}collidesRectangle(t){return this.collidesPolygon(t)}collidesCircle(t){return t.collidesPolygon(this)}}class v extends n{constructor(t,s){super(t),this.SHAPE="Circle",this.AABB=[],s=s||{},this.set(s)}set(t){this.radius=t.radius||this.article.width/2,this.radiusSquared=this.radius*this.radius,this.center=t.positionObject?t.positionObject:this.article,this.update()}update(){const t=this.AABB,s=this.radius,e=this.center;t[0]=e.x-s,t[1]=e.y-s,t[2]=e.x+s,t[3]=e.y+s}collidesCircle(t){const s=this.center,e=t.center,r=e.x-s.x,i=e.y-s.y,c=t.radius+this.radius;return r*r+i*i<=c*c}collidesPoint(t){const s=t.x-this.center.x,e=t.y-this.center.y;return s*s+e*e<=this.radiusSquared}collidesLine(t,s){function e(u,p){return u[0]*p[0]+u[1]*p[1]}const r=this.center,i=[r.x-t.x,r.y-t.y],c=[s.x-t.x,s.y-t.y],a=e(c,c);let h=e(i,c)/a;h=h<0?0:h,h=h>1?1:h;const d=[c[0]*h+t.x-r.x,c[1]*h+t.y-r.y];return e(d,d)<=this.radiusSquared}collidesRectangle(t){if(t.noRotate){const s=t.AABB,e=(s[2]-s[0])/2,r=(s[3]-s[1])/2,i=this.center,c=this.radius,a=Math.abs(i.x-s[0]),o=Math.abs(i.y-s[1]);if(a>e+c||o>r+c)return!1;if(a<=e||o<=r)return!0;const h=a-e,d=o-r;return h*h+d*d<=this.radiusSquared}else{const s=this.center;if(t.collidesPoint(s))return!0;const e=t.vertices;return this.collidesLine({x:e[0],y:e[1]},{x:e[2],y:e[3]})||this.collidesLine({x:e[2],y:e[3]},{x:e[4],y:e[5]})||this.collidesLine({x:e[4],y:e[5]},{x:e[6],y:e[7]})||this.collidesLine({x:e[6],y:e[7]},{x:e[0],y:e[1]})}}collidesPolygon(t){const s=this.center;if(t.collidesPoint(s))return!0;const e=t.vertices,r=e.length;for(let i=0;i<r-2;i+=2)if(this.collidesLine({x:e[i],y:e[i+1]},{x:e[i+2],y:e[i+3]}))return!0;return this.collidesLine({x:e[0],y:e[1]},{x:e[r-2],y:e[r-1]})}}return{Shape:n,Rectangle:x,Polygon:_,Circle:v}}(),l=A(96);class M{constructor(x,_="Rectangle"){this.sprite=l.default.PIXI.app.stage.addChild(x),this.x=this.sprite.x,this.y=this.sprite.y,this.collisionShape=_,this.intersects=new P[this.collisionShape](this.sprite),l.default.PIXI.app.ticker.add(this.tickerFn,this)}tickerFn(){this.sprite.x=this.x-l.default.camera.x,this.sprite.y=this.y-l.default.camera.y}collides(x){return this.intersects[`collides${x.collisionShape}`](x.intersects)}remove(x){if(this.x=this.y=1/0,this.sprite.parent.removeChild(this.sprite),Array.isArray(x)){const _=x.indexOf(this);_!==-1&&x.splice(_,1)}else typeof x=="object"&&delete this}}}}]);
