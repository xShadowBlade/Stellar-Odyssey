"use strict";(self.webpackChunkstellar_odyssey=self.webpackChunkstellar_odyssey||[]).push([[657],{5657:function(m,h,l){l.r(h),l.d(h,{player:function(){return t}});var u=l(7465),f=l(8544),n=l(6415),a=l(5296);const{app:r}=a.default.PIXI,t={sprite:(()=>{const o=new u.Graphics;return o.lineStyle(2,16777215),o.drawCircle(0,0,50),o.x=r.screen.width/2,o.y=r.screen.height/2,o.filters=[new f.Vw({quality:.2})],a.default.addSprite(o,"Circle")})(),acceleration:.2,velocity:{x:0,y:0},restoringForce:.005,friction:.95,smoothDamp:.15,position:{x:0,y:0,_x:0,_y:0},state:["idle"]};a.default.keyManager.addKeys([{name:"Move Up",key:"w",fn:()=>t.velocity.y-=t.acceleration},{name:"Move Left",key:"a",fn:()=>t.velocity.x-=t.acceleration},{name:"Move Down",key:"s",fn:()=>t.velocity.y+=t.acceleration},{name:"Move Right",key:"d",fn:()=>t.velocity.x+=t.acceleration}]);function p(o){a.default.PIXI.camera.x=n.E.smoothDamp(a.default.PIXI.camera.x,t.position.x,t.smoothDamp,o).toNumber(),a.default.PIXI.camera.y=n.E.smoothDamp(a.default.PIXI.camera.y,t.position.y,t.smoothDamp,o).toNumber()}r.ticker.add(o=>{switch(t.position.x+=t.velocity.x,t.position.y+=t.velocity.y,t.sprite.x+=t.velocity.x,t.sprite.y+=t.velocity.y,t.velocity.x*=t.friction,t.velocity.y*=t.friction,t.state[0]){case"lockedToMass":{const y=t.state[1];t.position.x=t.sprite.x=n.E.smoothDamp(t.sprite.x,y.x,t.smoothDamp,o).toNumber(),t.position.y=t.sprite.y=n.E.smoothDamp(t.sprite.y,y.y,t.smoothDamp,o).toNumber(),a.default.PIXI.camera.x=t.sprite.x-r.screen.width/2,a.default.PIXI.camera.y=t.sprite.y-r.screen.height/2}break;case"lockedToMassExit":t.position.x-=r.screen.width/2,t.position.y-=r.screen.height/2,p(o),t.state=["idle"];break;case"idle":default:p(o);break}})},6415:function(m,h,l){l.d(h,{E:function(){return u.E}});var u=l(4894),f=l(3161),n=l(2476),a=l(7122);class r{constructor(e,s,i){this.x=e,this.y=s,this.properties=i||{}}setValue(e,s){return this.properties[e]=s,s}getValue(e){return this.properties[e]}}class t{constructor(e,s,i){this.x_size=e,this.y_size=s,this.cells=[];for(let c=0;c<s;c++){this.cells[c]=[];for(let d=0;d<e;d++)this.cells[c][d]=new r(d,c,i)}}getAll(){const e=[];for(let s=0;s<this.y_size;s++)for(let i=0;i<this.x_size;i++)e.push(this.cells[s][i]);return e}all(){return this.getAll()}getAllX(e){const s=[];for(let i=0;i<this.y_size;i++)s.push(this.cells[i][e]);return s}allX(e){return this.getAllX(e)}getAllY(e){const s=[];for(let i=0;this.x_size;i++)s.push(this.cells[e][i]);return s}allY(e){return this.getAllY(e)}getCell(e,s){return this.cells[s][e]}setCell(e,s,i){this.cells[s][e]=i}getAdjacent(e,s){const i=[];return i[0]=this.getCell(e,s+1),i[1]=this.getCell(e+1,s),i[2]=this.getCell(e,s-1),i[3]=this.getCell(e-1,s+1),i}getDiagonal(e,s){const i=[];return i[0]=this.getCell(e-1,s+1),i[1]=this.getCell(e+1,s+1),i[2]=this.getCell(e+1,s-1),i[3]=this.getCell(e-1,s-1),i}getEncircling(e,s){return this.getAdjacent(e,s).concat(this.getDiagonal(e,s))}static getDistance(e,s,i,c){return Math.abs(Math.sqrt(Math.pow(i-e,2)+Math.pow(c-s,2)))}}const p={E:u.E,classes:{boost:f.X,currency:n.Aq,currencyStatic:n.TD,attribute:a.A,grid:t,gridCell:r}};function o(){typeof process!="object"&&typeof window!="undefined"&&(window.eMath=p)}o()}}]);
